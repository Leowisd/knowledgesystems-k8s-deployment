alertmanager:
  additionalRulesConfigMapLabels: {}
  additionalServiceMonitorLabels: {}
  config:
    global:
      resolve_timeout: 5m
    receivers:
    - name: "null"
    route:
      group_by:
      - job
      group_interval: 5m
      group_wait: 30s
      receiver: "null"
      repeat_interval: 12h
      routes:
      - match:
          alertname: DeadMansSwitch
        receiver: "null"
  externalUrl: ""
  global:
    pspEnable: true
    rbacEnable: true
  image:
    repository: quay.io/prometheus/alertmanager
    tag: v0.14.0
  ingress:
    annotations: {}
    enabled: false
    hosts: []
    labels: {}
    tls: []
  labels: {}
  nodeSelector: {}
  paused: false
  podAntiAffinity: soft
  prometheusLabelValue: ""
  replicaCount: 1
  resources: {}
  secrets: []
  selfServiceMonitor: true
  service:
    annotations: {}
    clusterIP: ""
    externalIPs: []
    labels: {}
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    nodePort: 30903
    type: ClusterIP
  storageSpec: {}
  templateFiles: {}
  tolerations: {}
deployAlertManager: true
deployCoreDNS: false
deployExporterNode: true
deployGrafana: true
deployKubeDNS: true
exporter-kube-controller-manager:
  additionalRulesConfigMapLabels: {}
  additionalServiceMonitorLabels: {}
  controllerManagerPort: 10252
  endpoints: []
  global:
    pspEnable: true
    rbacEnable: true
  scheme: http
  serviceSelectorLabelKey: k8s-app
exporter-kube-dns:
  additionalServiceMonitorLabels: {}
  global:
    pspEnable: true
    rbacEnable: true
exporter-kube-etcd:
  additionalRulesConfigMapLabels: {}
  additionalServiceMonitorLabels: {}
  caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  certFile: ""
  endpoints: []
  etcdPort: 4001
  global:
    pspEnable: true
    rbacEnable: true
  keyFile: ""
  scheme: http
exporter-kube-scheduler:
  additionalRulesConfigMapLabels: {}
  additionalServiceMonitorLabels: {}
  endpoints: []
  global:
    pspEnable: true
    rbacEnable: true
  schedulerPort: 10251
  scheme: http
  serviceSelectorLabelKey: k8s-app
exporter-kube-state:
  additionalRulesConfigMapLabels: {}
  additionalServiceMonitorLabels: {}
  addon_resizer:
    cpu: 100m
    extra_cpu: 1m
    extra_memory: 2Mi
    image:
      pullPolicy: IfNotPresent
      repository: gcr.io/google_containers/addon-resizer
      tag: "1.7"
    memory: 130Mi
    resources:
      limits:
        cpu: 100m
        memory: 30Mi
      requests:
        cpu: 100m
        memory: 30Mi
  global:
    pspEnable: true
    rbacEnable: true
  kube_state_metrics:
    image:
      pullPolicy: IfNotPresent
      repository: gcr.io/google_containers/kube-state-metrics
      tag: v1.2.0
    service:
      externalPort: 80
      internalPort: 8080
      name: kube-state-metrics
      type: ClusterIP
  replicaCount: 1
  tolerations: {}
exporter-kubelets:
  additionalRulesConfigMapLabels: {}
  additionalServiceMonitorLabels: {}
  global:
    pspEnable: true
    rbacEnable: true
  https: true
  insecureSkipVerify: true
exporter-kubernetes:
  additionalRulesConfigMapLabels: {}
  additionalServiceMonitorLabels: {}
  global:
    pspEnable: true
    rbacEnable: true
exporter-node:
  additionalRulesConfigMapLabels: {}
  additionalServiceMonitorLabels: {}
  container:
    args:
    - --path.procfs=/host/proc
    - --path.sysfs=/host/sys
    volumeMounts:
    - mountPath: /host/proc
      name: proc
      readOnly: true
    - mountPath: /host/sys
      name: sys
      readOnly: true
    volumes:
    - hostPath:
        path: /proc
      name: proc
    - hostPath:
        path: /sys
      name: sys
  global:
    pspEnable: true
    rbacEnable: true
  image:
    pullPolicy: IfNotPresent
    repository: quay.io/prometheus/node-exporter
    tag: v0.15.2
  replicaCount: 1
  resources:
    limits:
      cpu: 200m
      memory: 50Mi
    requests:
      cpu: 100m
      memory: 30Mi
  service:
    containerPort: 9100
    externalPort: 9100
    type: ClusterIP
  tolerations:
  - effect: NoSchedule
    operator: Exists
global:
  pspEnable: true
  rbacEnable: true
grafana:
  additionalServiceMonitorLabels: {}
  adminPassword: admin
  adminUser: admin
  annotations: {}
  auth:
    anonymous:
      enabled: "true"
  dataSource: {}
  global:
    pspEnable: true
    rbacEnable: true
  grafanaWatcher:
    repository: quay.io/coreos/grafana-watcher
    resources: {}
    tag: v0.0.8
  image:
    repository: grafana/grafana
    tag: 5.0.0
  ingress:
    annotations: {}
    enabled: false
    hosts: []
    labels: {}
    tls: []
  keepOriginalDashboards: true
  keepOriginalDatasources: true
  mountGrafanaConfig: false
  nodeSelector: {}
  resources: {}
  selfServiceMonitor: true
  serverDashboardConfigmaps: []
  serverDashboardFiles: {}
  service:
    annotations: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    nodePort: 30902
    type: ClusterIP
  storageSpec: {}
  tolerations: {}
prometheus:
  additionalRulesConfigMapLabels: {}
  additionalScrapeConfigs: []
  additionalSelfServiceMonitorLabels: {}
  alertingEndpoints: []
  config:
    specifiedInValues: true
    value: {}
  externalLabels: {}
  externalUrl: ""
  global:
    pspEnable: true
    rbacEnable: true
  image:
    repository: quay.io/prometheus/prometheus
    tag: v2.2.1
  ingress:
    annotations: {}
    enabled: false
    hosts: []
    labels: {}
    tls: []
  labels: {}
  logLevel: info
  nodeSelector: {}
  paused: false
  podAntiAffinity: soft
  prometheusLabelValue: ""
  remoteRead: {}
  remoteWrite: {}
  replicaCount: 1
  resources: {}
  retention: 24h
  routePrefix: /
  rules:
    additionalLabels: {}
    specifiedInValues: true
    value: {}
  rulesSelector: {}
  secrets: []
  selfServiceMonitor: true
  service:
    annotations: {}
    clusterIP: ""
    externalIPs: []
    labels: {}
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    nodePort: 30900
    sessionAffinity: None
    type: ClusterIP
  serviceAccount:
    create: true
    name: ""
  serviceMonitors:
    - name: nginx-ingress-service-monitor
      jobLabel: nginx-ingress
      selector:
        matchLabels:
          app: nginx-ingress
          release: eating-dingo
      namespaceSelector:
        matchNames:
          - kube-system
      endpoints:
        - port: metrics
          interval: 30s
  serviceMonitorsSelector:
    matchExpressions:
    - key: app
      operator: In
      values:
      - gn-spring-boot
      - alertmanager
      - exporter-coredns
      - exporter-kube-controller-manager
      - exporter-kube-dns
      - exporter-kube-etcd
      - exporter-kube-scheduler
      - exporter-kube-state
      - exporter-kubelets
      - exporter-kubernetes
      - exporter-node
      - grafana
      - prometheus
      - prometheus-operator
  storageSpec: {}
  tolerations: {}

